swagger: '2.0'
info:
  title: "Mechanic Management API"
  description: "This is the API documentation for the Mechanic Management system."
  version: "1.0.0"
host: "127.0.0.1:5000"
schemes:
  - "http"
consumes:
  - "application/json"
produces:
  - "application/json"
paths: 
  /customers/login:
    post:
      tags:
        - "customers"
      summary: "Login a customer"
      description: "This endpoint allows a customer to log in."
      parameters:
        - in: "body"
          name: "body"
          description: "Login credentials"
          required: true
          schema:
            $ref: "#/definitions/LoginCredentials"
      responses:
        200:
          description: "Login successful"
          schema:
            $ref: "#/definitions/LoginResponse"
          examples:
            application/json:
              token: "kjlasdkfjadslkj"
              message: "Login successful"
              status: "success"
        400:
          description: "Invalid credentials"
  /customers: #endpoint
    post:
      tags:
        - Customers
      summary: "Create a customer"
      description: "Endpoint creates a new customer"
      parameters:
        - in: "body"
          name: "body"
          description: "Information needed to create a customer"
          required: true
          schema:
            $ref: "#/definitions/CreateCustomerPayload"
      responses:
        201:
          description: "Customer created"
          schema:
            $ref: "#/definitions/CreateCustomerResponse"
          examples:
            application/json:
              id: 1
              name: John Doe
              phone: "1234567890"
              email: jdoe@gmail.com
              password: mypassword

  

definitions: 
  LoginCredentials:
    type: "object"
    properties:
      email:
        type: "string"
      password:
        type: "string"
    required:
      - email
      - password
    
  LoginResponse:
    type: "object"
    properties:
      token:
        type: "string"
      message:
        type: "string"
      status:
        type: "string"

  CreateCustomerPayload:
    type: "object"
    properties:
      name:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
      password:
        type: "string"
      
    required:
      - name
      - email
      - phone
      - password


  CreateCustomerResponse:
    type: "object"
    properties:
      id:
        type: "int"
      name:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
      password:
        type: "string"